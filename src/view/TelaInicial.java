/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Model.bean.Chave;
import Model.bean.Monitor;
import Model.bean.Professor;
import Model.bean.Terciario;
import controller.Controller;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anton
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    Controller c = new Controller();

    ArrayList<Chave> listaChave = new ArrayList<>();
    ArrayList<Monitor> listaMonitor = new ArrayList<>();
    ArrayList<Professor> listaProfessor = new ArrayList<>();
    ArrayList<Terciario> listaTerciario = new ArrayList<>();

    public TelaInicial(Controller c) {
        initComponents();
        iniciadorDeTudo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonRegistrar = new javax.swing.JButton();
        jComboBoxProfissao = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabelChave = new javax.swing.JLabel();
        jComboBoxChave = new javax.swing.JComboBox<>();
        jLabelEstacionamento = new javax.swing.JLabel();
        jRadioButtonEstacionamentoSim = new javax.swing.JRadioButton();
        jRadioButtonEstacionamentoNao = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableChaves = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableChavesEstacionamento = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonDevolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonRegistrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 297, 49));

        jComboBoxProfissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Monitor", "Professor", "Terciario" }));
        jComboBoxProfissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProfissaoActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxProfissao, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 180, 237, 40));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Você é um:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 151, 237, 27));
        jPanel1.add(jTextFieldNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 99, 237, 34));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Digite seu nome");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 55, 237, 33));

        jLabelChave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelChave.setText("Deseja alguma chave?");
        jPanel1.add(jLabelChave, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 55, 215, 33));

        jComboBoxChave.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jPanel1.add(jComboBoxChave, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 99, 215, 30));

        jLabelEstacionamento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelEstacionamento.setText("Está utilizando o estacionamento?");
        jPanel1.add(jLabelEstacionamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 240, 30));

        buttonGroup1.add(jRadioButtonEstacionamentoSim);
        jRadioButtonEstacionamentoSim.setText("Sim");
        jPanel1.add(jRadioButtonEstacionamentoSim, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, -1, -1));

        buttonGroup1.add(jRadioButtonEstacionamentoNao);
        jRadioButtonEstacionamentoNao.setSelected(true);
        jRadioButtonEstacionamentoNao.setText("Não");
        jPanel1.add(jRadioButtonEstacionamentoNao, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, -1, -1));

        jTabbedPane1.addTab("Tela Inicial", jPanel1);

        jTableChaves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Chave", "Em uso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableChaves);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Chaves em uso/Chaves Disponiveis");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 98, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Chaves", jPanel2);

        jTableChavesEstacionamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Profissao", "Chave", "Estacionamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableChavesEstacionamento);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Pessoas utilizando Chaves e/ou Estacionamento");

        jButtonDevolver.setText("Sair/Devolver Chave");
        jButtonDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDevolver)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gerênciamento", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxProfissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProfissaoActionPerformed
        // TODO add your handling code here:
        if (souProfessor()) {
        } else if (souMonitor()) {
        } else if (souTerciario()) {
            JOptionPane.showMessageDialog(this, "Não foi possivel o cadastro");
        } else if (souNinguem()){
            JOptionPane.showMessageDialog(this, "Não foi possivel o cadastro");
        }
    }//GEN-LAST:event_jComboBoxProfissaoActionPerformed

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        // TODO add your handling code here:
        registrar();
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jButtonDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverActionPerformed
        // TODO add your handling code here:
        if (jTableChavesEstacionamento.getSelectedRow() != -1) {
            removerChave();
        }
    }//GEN-LAST:event_jButtonDevolverActionPerformed

    public void removerChave() {
        for (int i = 0; i < listaChave.size(); i++) {
            if (listaChave.get(i).getSala().equals((String) jTableChavesEstacionamento.getValueAt(jTableChavesEstacionamento.getSelectedRow(), 2))) {
                listaChave.get(i).setEmUso(false);
                preencherComboBoxChave();
                break;
            }
        }
        if (jTableChavesEstacionamento.getValueAt(jTableChavesEstacionamento.getSelectedRow(), 1).equals("monitor")) {
            for (int i = 0; i < listaMonitor.size(); i++) {
                if (listaMonitor.get(i).getNome().equals((String) jTableChavesEstacionamento.getValueAt(jTableChavesEstacionamento.getSelectedRow(), 0))) {
                    listaMonitor.remove(i);
                }
            }
        }
        if (jTableChavesEstacionamento.getValueAt(jTableChavesEstacionamento.getSelectedRow(), 1).equals("professor")) {
            for (int i = 0; i < listaProfessor.size(); i++) {
                if (listaProfessor.get(i).getNome().equals((String) jTableChavesEstacionamento.getValueAt(jTableChavesEstacionamento.getSelectedRow(), 0))) {
                    listaProfessor.remove(i);
                }
            }
        }
        preencherComboBoxChave();
        preencherTabelaChaves();
        exibirTabelaChaveEstacionamento();

    }

    public void registrar() {
        if (c.validarPreenchido(jTextFieldNome.getText())) {
            if (jComboBoxProfissao.getSelectedIndex() == 1 || jComboBoxProfissao.getSelectedIndex() == 2) {
                if (jComboBoxProfissao.getSelectedIndex() == 2) {
                    seForProfessor();

                } else {
                    seForMonitor();
                } 
            } else{
                 JOptionPane.showMessageDialog(this, "Algo deu errado!!");
                 return;
            }

            chamarTodos();
        } else {
            JOptionPane.showMessageDialog(this, "Nome inválido");
        }
    }

    public void chamarTodos() {
        exibirTabelaChaveEstacionamento();
        preencherComboBoxChave();
        preencherTabelaChaves();
        zerarTudo();

        JOptionPane.showMessageDialog(this, "Registrado =)");
    }

    public void zerarTudo() {
        jTextFieldNome.setText("");
        jComboBoxProfissao.setSelectedIndex(0);
        jLabelChave.setVisible(false);
        jComboBoxChave.setVisible(false);
        jLabelEstacionamento.setVisible(false);
        jRadioButtonEstacionamentoSim.setVisible(false);
        jRadioButtonEstacionamentoNao.setVisible(false);
    }

    public void iniciadorDeTudo() {
        addChaves();
        preencherComboBoxChave();
        souTerciario();
        preencherTabelaChaves();
        zerarTudo();
    }

    public void addChaves() {
        Chave chave1 = new Chave();
        chave1.setSala("Sala 1");
        listaChave.add(chave1);

        Chave chave2 = new Chave();
        chave2.setSala("Sala 2");

        listaChave.add(chave2);

        Chave chave3 = new Chave();
        chave3.setSala("Sala 3");
        listaChave.add(chave3);

        Chave chave4 = new Chave();
        chave4.setSala("Sala 4");
        listaChave.add(chave4);

        Chave chave5 = new Chave();
        chave5.setSala("Sala 5");
        listaChave.add(chave5);

        Chave chave6 = new Chave();
        chave6.setSala("Lab INFO 1");
        listaChave.add(chave6);

        Chave chave7 = new Chave();
        chave7.setSala("Lab INFO 2");
        listaChave.add(chave7);

        Chave chave8 = new Chave();
        chave8.setSala("Lab Quimica");
        listaChave.add(chave8);

        Chave chave9 = new Chave();
        chave9.setSala("Lab Fisica");
        listaChave.add(chave9);

    }

    public void seForMonitor() {
        if (!selecionadoValidoChave()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo chave");
        } else {
            Monitor monitor = new Monitor();
            monitor.setNome(jTextFieldNome.getText());
            monitor.setCargo("monitor");
            monitor.setChave((String) jComboBoxChave.getSelectedItem());

            deixarChaveEmUso();

            listaMonitor.add(monitor);
        }
    }

    public void seForProfessor() {
        if (!selecionadoValidoChave()) {
            JOptionPane.showMessageDialog(this, "Preencha o campo chave");
        } else {
            Professor professor = new Professor();
            professor.setNome(jTextFieldNome.getText());
            professor.setCargo("professor");
            professor.setChave((String) jComboBoxChave.getSelectedItem());
            if (jRadioButtonEstacionamentoSim.isSelected()) {
                professor.setEstacionamento(true);
            } else {
                professor.setEstacionamento(false);
            }

            deixarChaveEmUso();

            listaProfessor.add(professor);
        }
    }

    public void deixarChaveEmUso() {
        for (int i = 0; i < listaChave.size(); i++) {
            if (listaChave.get(i).getSala().equals((String) jComboBoxChave.getSelectedItem())) {
                listaChave.get(i).setEmUso(true);
                break;
            }
        }
    }

    private void preencherComboBoxChave() {
        jComboBoxChave.removeAllItems();
        jComboBoxChave.addItem("Selecione");
        for (int i = 0; i < listaChave.size(); i++) {
            if (listaChave.get(i).isEmUso() == false) {
                jComboBoxChave.addItem(listaChave.get(i).getSala());
            }
        }
    }

    public void preencherTabelaChaves() {
        DefaultTableModel modelo = (DefaultTableModel) jTableChaves.getModel();

        while (jTableChaves.getModel().getRowCount() > 0) {
            modelo.removeRow(0);
        }
        for (int i = 0; i < listaChave.size(); i++) {
            modelo.addRow(new Object[]{
                listaChave.get(i).getSala(),
                listaChave.get(i).isEmUso(),});
        }
    }

    private boolean selecionadoValidoProfissao() {
        if (jComboBoxProfissao.getSelectedIndex() != -1 && jComboBoxProfissao.getSelectedIndex() != 0) {
            return true;
        }
        return false;
    }

    private boolean selecionadoValidoChave() {
        if (jComboBoxChave.getSelectedIndex() != -1 && jComboBoxChave.getSelectedIndex() != 0) {
            return true;
        }
        return false;
    }

    public boolean souProfessor() {
        if (selecionadoValidoProfissao()) {
            if (jComboBoxProfissao.getSelectedIndex() == 2) {
                //Chave
                jLabelChave.setVisible(true);
                jComboBoxChave.setVisible(true);
                //Estacionamento
                jLabelEstacionamento.setVisible(true);
                jRadioButtonEstacionamentoSim.setVisible(true);
                jRadioButtonEstacionamentoNao.setVisible(true);
                return true;
            }

        }
        return false;
    }

    public boolean souMonitor() {
        if (selecionadoValidoProfissao()) {
            if (jComboBoxProfissao.getSelectedIndex() == 1) {
                //Chave
                jLabelChave.setVisible(true);
                jComboBoxChave.setVisible(true);
                //Estacionamento
                jLabelEstacionamento.setVisible(false);
                jRadioButtonEstacionamentoSim.setVisible(false);
                jRadioButtonEstacionamentoNao.setVisible(false);
                return true;
            }
        }
        return false;
    }

    public boolean souTerciario() {
        if (selecionadoValidoProfissao()) {
            if (jComboBoxProfissao.getSelectedIndex() == 3) {
                //Chave
                jLabelChave.setVisible(false);
                jComboBoxChave.setVisible(false);
                //Estacionamento
                jLabelEstacionamento.setVisible(false);
                jRadioButtonEstacionamentoSim.setVisible(false);
                jRadioButtonEstacionamentoNao.setVisible(false);
                return false;
            }
        }
        return false;
    }
    
     public boolean souNinguem() {
        if (selecionadoValidoProfissao()) {
            if (jComboBoxProfissao.getSelectedIndex() == 0) {
                //Chave
                jLabelChave.setVisible(false);
                jComboBoxChave.setVisible(false);
                //Estacionamento
                jLabelEstacionamento.setVisible(false);
                jRadioButtonEstacionamentoSim.setVisible(false);
                jRadioButtonEstacionamentoNao.setVisible(false);
                return false;
            }
        }
        return false;
    }

    public void exibirTabelaChaveEstacionamento() {

        DefaultTableModel modelo = (DefaultTableModel) jTableChavesEstacionamento.getModel();

        while (jTableChavesEstacionamento.getModel().getRowCount() > 0) {
            modelo.removeRow(0);
        }

        for (int i = 0; i < listaProfessor.size(); i++) {
            modelo.addRow(new Object[]{
                listaProfessor.get(i).getNome(),
                listaProfessor.get(i).getCargo(),
                listaProfessor.get(i).getChave(),
                listaProfessor.get(i).isEstacionamento(),});
        }
        for (int i = 0; i < listaMonitor.size(); i++) {
            modelo.addRow(new Object[]{
                listaMonitor.get(i).getNome(),
                listaMonitor.get(i).getCargo(),
                listaMonitor.get(i).getChave(),
                false});
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonDevolver;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JComboBox<String> jComboBoxChave;
    private javax.swing.JComboBox<String> jComboBoxProfissao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelChave;
    private javax.swing.JLabel jLabelEstacionamento;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonEstacionamentoNao;
    private javax.swing.JRadioButton jRadioButtonEstacionamentoSim;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableChaves;
    private javax.swing.JTable jTableChavesEstacionamento;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
